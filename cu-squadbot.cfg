
// To use the following as cu-squadbot.cfg. Set the following environment variables:
//  CHAT_USERNAME = XMPP username
//  CHAT_PASSWORD = XMPP password
//  GITHUB_USERNAME = GitHub username
//  GITHUB_APIKEY = API key generated for GitHub username.
//     GitHub API key can have minimum access, it's just needed to avoid the API rate limit.

// Configuration file for cu-squadbot.js


module.exports = {

  // XMPP servers and chat rooms
  servers: [
  {
    name: 'hatchery',
    username: process.env.CHAT_USERNAME + "@chat.camelotunchained.com",
    password: process.env.CHAT_PASSWORD,
    nickname: 'CU-SquadBot',
    address: 'chat.camelotunchained.com',
    service: 'conference',
    motdFile: './hatchery.motd',
    nomotdFile: './hatchery.nomotd',
    chatlogFile: './hatchery.chatlog',
    rooms: [
      { 
        name: '_modsquad',
        joined: false,          // Always leave this set to 'false'
        motd: false,            // Auto-send MOTD when users join room
        monitor: false,         // Monitor room for test or CSE messages
        announce: true,         // Announce GitHub notifications to room
        log: true,              // Log all messages in room for !chatlog
        privateRoom: true        // Only allow viewing logs from inside this room
      },
    ],
    allowPMCommands: true,
  },
  ],

  // Number of hours chat logs will be saved
  chatlogLimit: 48,

  // Users without CSE flag which can set MOTD messages
  motdAdmins: [
    'Agoknee',
  ],

  // GitHub access details
  githubUsername: process.env.GITHUB_USERNAME,
  githubAPIToken: process.env.GITHUB_APIKEY,

  // GitHub saved data location
  githubFile: './github.data',

  // All base GitHub organizations to monitor for repositories
  githubOrgs: [
    'csegames',
    'CUModSquad'
  ],

  // All GitHub users to ignore for announcing events
  githubIgnores: [
    'review-ninja',
  ],

  // Trello access details
  trelloAPIKey: process.env.TRELLO_APIKEY,
  trelloSecret: process.env.TRELLO_SECRET,

  // Member list saved data location
  memberFile: './member.data',

  // Keyword regular expressions to watch for which match test CSE messages
  testKeywords: [
    ".*bacon.*",
  ],

  // Pushover application token
  poAppToken: "abcdEFGHijklmNOPqrStuVwxYZ",

  // Pushover recipients for IT server online notices
  poITNotices: [
    "abCDefGHijKLmnOPqrSTuvWXyZ"  // IT Server Notices Pushover Group
  ],

  // SNS recipients for IT server online notices
  snsITNotices: [
    "arn:aws:sns:us-east-1:1234567890:CU_Server_Notices-IT"      // IT ARN
  ],

  // Pushover recipients for Alpha server online notices
  poAlphaNotices: [
    "abCDefGHijKLmnOPqrSTuvWXyZ"  // Alpha Server Notices Pushover Group
  ],

  // SNS recipients for Alpha server online notices
  snsAlphaNotices: [
    "arn:aws:sns:us-east-1:1234567890:CU_Server_Notices-Alpha"   // Alpha ARN
  ],

  // Pushover recipients for Beta1 server online notices
  poBeta1Notices: [
    "abCDefGHijKLmnOPqrSTuvWXyZ"  // Beta1 Server Notices Pushover Group
  ],

  // SNS recipients for Beta1 server online notices
  snsBeta1Notices: [
    "arn:aws:sns:us-east-1:1234567890:CU_Server_Notices-Beta1"   // Beta1 ARN
  ],

  // Pushover recipients for Beta2 server online notices
  poBeta2Notices: [
    "abCDefGHijKLmnOPqrSTuvWXyZ"  // Beta2 Server Notices Pushover Group
  ],

  // SNS recipients for Beta2 server online notices
  snsBeta2Notices: [
    "arn:aws:sns:us-east-1:1234567890:CU_Server_Notices-Beta2"   // Beta2 ARN
  ],

  // Pushover recipients for Beta3 server online notices
  poBeta3Notices: [
    "abCDefGHijKLmnOPqrSTuvWXyZ"  // Beta3 Server Notices Pushover Group
  ],

  // SNS recipients for Beta3 server online notices
  snsBeta3Notices: [
    "arn:aws:sns:us-east-1:1234567890:CU_Server_Notices-Beta3"   // Beta3 ARN
  ]
};
